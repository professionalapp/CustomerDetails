@page
@model CustomerDetails.Pages.EmployeesModel
@{
    ViewData["Title"] = "ุจุญุซ ุงูููุธููู";
}

<div class="container mt-4 fade-in">
    <div class="row">
        <div class="col-12">
            <h1 class="text-center mb-4" style="color: #4C7EFF; font-family: 'Segoe UI', sans-serif;">
                ุจุญุซ ุงูููุธููู ๐
            </h1>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-8 mx-auto">
            <div class="d-flex justify-content-end mb-2">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="showAllToggle">
                    <label class="form-check-label" for="showAllToggle">ุนุฑุถ ูู ุงูููุธููู</label>
                </div>
            </div>
            <div class="search-container flex-grow-1 mb-3">
                <input type="text" id="searchInput" class="search-input" placeholder="ุงุจุญุซ ุจุงูุงุณู ุฃู ุฑูู ุงูููุธู..."
                    autocomplete="off" />
                <i class="fas fa-search search-icon"></i>
                <div id="searchResults" class="search-results"></div>
            </div>
            <div class="text-center mt-2">
                <small class="text-muted">
                    <i class="fas fa-info-circle"></i>
                    ุงูุชุจ ุงูุงุณู ุฃู ุฑูู ุงูููุธู ููุจุญุซ
                </small>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div id="searchContent">
                <div class="text-center py-5">
                    <div class="search-welcome">
                        <i class="fas fa-search fa-4x text-muted mb-4"></i>
                        <h3 class="text-muted mb-3">ูุฑุญุจุงู ุจู ูู ุจุญุซ ุงูููุธููู</h3>
                        <p class="text-muted mb-4">ุงูุชุจ ุงูุงุณู ุฃู ุฑูู ุงูููุธู ูู ุงูุฃุนูู</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">ุตูุฑุฉ ุงูููุธู</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="" class="img-fluid" id="modalImage" alt="Employee Image">
            </div>
        </div>
    </div>
</div>

<!-- Edit Employee Modal -->
<div class="modal fade" id="editEmployeeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ุชุนุฏูู ุจูุงูุงุช ุงูููุธู</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editEmployeeForm">
                    <div class="mb-2">
                        <label class="form-label">ุงูุงุณู</label>
                        <input class="form-control" id="edit_name" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุงูุนูุฑ</label>
                        <input type="number" class="form-control" id="edit_age" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุงูุนููุงู</label>
                        <input class="form-control" id="edit_address" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ููุน ุงููููุฉ</label>
                        <select class="form-select" id="edit_identityType">
                            <option value="ูููุฉ ุฃุฑุฏููุฉ">ูููุฉ ุฃุฑุฏููุฉ</option>
                            <option value="ุฌูุงุฒ ุณูุฑ">ุฌูุงุฒ ุณูุฑ</option>
                            <option value="ุฅูุงูุฉ">ุฅูุงูุฉ</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุงุณู ุงููููุฉ</label>
                        <input class="form-control" id="edit_identityName" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุฑุงุจุท ุงูุตูุฑุฉ</label>
                        <input class="form-control" id="edit_imageUrl" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ุฅุบูุงู</button>
                <button type="button" class="btn btn-primary" id="saveEditBtn">ุญูุธ</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Transaction Modal -->
<div class="modal fade" id="addTxModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ุฅุถุงูุฉ ูุนุงููุฉ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addTxForm">
                    <div class="mb-2">
                        <label class="form-label">ููุน ุงููุนุงููุฉ</label>
                        <select class="form-select" id="tx_type">
                            <option value="ุณุญุจ">ุณุญุจ</option>
                            <option value="ุฅูุฏุงุน">ุฅูุฏุงุน</option>
                            <option value="ุชุญููู ุฑุงุชุจ">ุชุญููู ุฑุงุชุจ</option>
                            <option value="ููุงูุฃุฉ">ููุงูุฃุฉ</option>
                            <option value="ุฎุตู">ุฎุตู</option>
                            <option value="ุณููุฉ">ุณููุฉ</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุงููุจูุบ</label>
                        <input type="number" class="form-control" id="tx_amount" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุฑูู ุงูุตูุฏูู</label>
                        <input class="form-control" id="tx_box" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุงูููุช</label>
                        <input class="form-control" value="ุณูุชู ุชุณุฌูู ุงูููุช ุงูุญุงูู ุชููุงุฆูุงู" disabled />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ูุตู (ุงุฎุชูุงุฑู)</label>
                        <input class="form-control" id="tx_desc" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ุฅุบูุงู</button>
                <button type="button" class="btn btn-success" id="saveTxBtn">ุญูุธ ุงููุนุงููุฉ</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Transaction Modal -->
<div class="modal fade" id="editTxModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ุชุนุฏูู ูุนุงููุฉ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editTxForm">
                    <input type="hidden" id="edit_tx_documentId">
                    <div class="mb-2">
                        <label class="form-label">ููุน ุงููุนุงููุฉ</label>
                        <select class="form-select" id="edit_tx_type">
                            <option value="ุณุญุจ">ุณุญุจ</option>
                            <option value="ุฅูุฏุงุน">ุฅูุฏุงุน</option>
                            <option value="ุชุญููู ุฑุงุชุจ">ุชุญููู ุฑุงุชุจ</option>
                            <option value="ููุงูุฃุฉ">ููุงูุฃุฉ</option>
                            <option value="ุฎุตู">ุฎุตู</option>
                            <option value="ุณููุฉ">ุณููุฉ</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุงููุจูุบ</label>
                        <input type="number" class="form-control" id="edit_tx_amount" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุฑูู ุงูุตูุฏูู</label>
                        <input class="form-control" id="edit_tx_box" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">ุงููุตู (ุงุฎุชูุงุฑู)</label>
                        <input class="form-control" id="edit_tx_desc" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ุฅุบูุงู</button>
                <button type="button" class="btn btn-primary" id="saveEditTxBtn">ุญูุธ ุงูุชุนุฏููุงุช</button>
            </div>
        </div>
    </div>
</div>

<!-- Transactions Summary Modal -->
<div class="modal fade" id="txSummaryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ููุฎุต ุงููุนุงููุงุช</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="txSummaryBody">
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let searchTimeout;
        const searchInput = document.getElementById('searchInput');
        const searchResults = document.getElementById('searchResults');
        const searchContent = document.getElementById('searchContent');

        searchInput.addEventListener('input', function () {
            const query = this.value.trim();
            if (query.length === 0) { searchResults.style.display = 'none'; return; }
            if (searchTimeout) clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => performSearch(query), 300);
        });

        document.addEventListener('click', function (e) {
            if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                searchResults.style.display = 'none';
            }
        });

        async function performSearch(query) {
            try {
                const response = await fetch(`/api/employees/search?query=${encodeURIComponent(query)}`);
                const results = await response.json();
                if (results.length === 0) {
                    searchResults.innerHTML = '<div class="no-results">ูุง ุชูุฌุฏ ูุชุงุฆุฌ</div>';
                } else {
                    searchResults.innerHTML = results.map(e => `
                                                        <div class="search-result-item" onclick="selectEmployee('${e.id}')">
                                                            <div class="search-result-name">${e.name}</div>
                                                            <div class="search-result-details">
                                                                ุฑูู ุงูููุธู: ${e.id} | ุงูุนูุฑ: ${e.age} ุณูุฉ | ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${e.joinDate}
                                                            </div>
                                                        </div>
                                                    `).join('');
                    playSound('successed.mp3'); // Play sound here
                }
                searchResults.style.display = 'block';
            } catch (err) {
                console.error(err);
                searchResults.innerHTML = '<div class="no-results">ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุจุญุซ</div>';
                searchResults.style.display = 'block';
            }
        }

        function selectEmployee(id) {
            searchInput.value = id;
            searchResults.style.display = 'none';
            loadEmployee(id);
        }

        async function loadEmployee(id) {
            try {
                searchContent.innerHTML = `
                                                                    <div class="text-center py-4">
                                                                        <div class="spinner-border text-primary" role="status">
                                                                            <span class="visually-hidden">ุฌุงุฑู ุงูุชุญููู...</span>
                                                                        </div>
                                                                        <p class="mt-2">ุฌุงุฑู ุชุญููู ุจูุงูุงุช ุงูููุธู...</p>
                                                                    </div>
                                                                `;

                const [empRes, trRes] = await Promise.all([
                    fetch(`/api/employees/${encodeURIComponent(id)}`),
                    fetch(`/api/employees/${encodeURIComponent(id)}/transactions`)
                ]);

                if (empRes.status === 404) {
                    searchContent.innerHTML = `<div class="alert alert-warning text-center">ูุง ููุฌุฏ ููุธู ุจูุฐุง ุงูุฑูู: <strong>${id}</strong></div>`;
                    return;
                }

                const emp = await empRes.json();
                const transactions = trRes.ok ? await trRes.json() : [];

                // store globally for modals
                window.currentEmployee = emp;

                // Calculate transaction summaries
                const totalAmount = transactions.reduce((sum, t) => sum + (t.amount || 0), 0);

                const transactionsTable = transactions.length > 0 ? `
                                        <div class="card mt-4">
                                            <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                                                <h4 class="mb-0 text-white">ุณุฌู ุงููุนุงููุงุช ๐ณ</h4>
                                                <button class="btn btn-sm btn-light" title="ููุฎุต ุงููุนุงููุงุช" onclick="openTxSummary()">
                                                    <i class="fas fa-chart-pie"></i>
                                                </button>
                                            </div>
                                            <div class="card-body">
                                                <!-- Transaction Total -->
                                                <div class="row mb-3 text-center">
                                                    <div class="col-12">
                                                        <div class="p-2 border rounded bg-light">
                                                            <strong>ูุฌููุน ุงููุจุงูุบ:</strong> <span class="fw-bold">${totalAmount.toLocaleString()} ุฏ.ุฃ</span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="table-responsive">
                                                    <table class="table table-striped table-hover">
                                                        <thead class="table-dark">
                                                            <tr>
                                                                <th>ููุน ุงููุนุงููุฉ</th>
                                                                <th>ุงููุจูุบ</th>
                                                                <th>ุงูุชุงุฑูุฎ ูุงูููุช</th>
                                                                <th>ุงูุตูุฏูู</th>
                                                                <th>ุงููุตู</th>
                                                                <th>ุงูุฅุฌุฑุงุกุงุช</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            ${transactions.map(t => `
                                                                <tr>
                                                                    <td><span class="badge ${t.transactionType === 'ุฅูุฏุงุน' ? 'bg-success' : 'bg-danger'}">${t.transactionType ?? ''}</span></td>
                                                                    <td class="${t.transactionType === 'ุฅูุฏุงุน' ? 'text-success' : 'text-danger'} fw-bold">${(t.amount ?? 0).toLocaleString()}</td>
                                                                    <td>${t.transactionTime ?? ''}</td>
                                                                    <td>${t.boxNumber ?? ''}</td>
                                                                    <td>${t.description ?? ''}</td>
                                                                    <td><button class="btn btn-sm btn-info" onclick="openEditTxModal('${t.documentId}')">ุชุนุฏูู</button></td>
                                                                </tr>
                                                            `).join('')}
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    ` : `
                                        <div class="card mt-4">
                                            <div class="card-header bg-success text-white">
                                                <h4 class="mb-0 text-white">ุณุฌู ุงููุนุงููุงุช ๐ณ</h4>
                                            </div>
                                            <div class="card-body text-center text-muted">ูุง ุชูุฌุฏ ูุนุงููุงุช ููุฐุง ุงูููุธู</div>
                                        </div>
                                    `;

                searchContent.innerHTML = `
                                                                    <div class="card mb-4">
                                                                        <div class="card-header bg-primary text-white">
                                                                            <h3 class="mb-0 text-white">ูุนูููุงุช ุงูููุธู ๐ค</h3>
                                                                        </div>
                                                                        <div class="card-body">
                                                                            <div class="d-flex justify-content-end mb-3">
                                                                                <button class="btn btn-warning me-2" onclick="openEditModal(window.currentEmployee)">ุชุนุฏูู ุงูุจูุงูุงุช</button>
                                                                                <button class="btn btn-success" onclick="openTxModal()">ุฅุถุงูุฉ ูุนุงููุฉ</button>
                                                                            </div>
                                                                            <div class="row">
                                                                                <div class="col-md-3"><strong>ุฑูู ุงูููุธู:</strong><br><span class="text-primary">${emp.id}</span></div>
                                                                                <div class="col-md-3"><strong>ุงูุงุณู:</strong><br><span>${emp.name}</span></div>
                                                                                <div class="col-md-3"><strong>ุงูุนูุฑ:</strong><br><span>${emp.age} ุณูุฉ</span></div>
                                                                                <div class="col-md-3"><strong>ุชุงุฑูุฎ ุงูุฅูุดุงุก:</strong><br><span>${emp.createdAt ?? ''}</span></div>
                                                                            </div>
                                                                            <div class="row mt-3">
                                                                                <div class="col-md-6"><strong>ุงูุนููุงู:</strong><br><span>${emp.address ?? ''}</span></div>
                                                                                <div class="col-md-3"><strong>ููุน ุงููููุฉ:</strong><br><span>${emp.identityType ?? ''}</span></div>
                                                                                <div class="col-md-3"><strong>ุงุณู ุงููููุฉ:</strong><br><span>${emp.identityName ?? ''}</span></div>
                                                                            </div>
                                                                            ${emp.imageUrl ? `<div class="mt-3"><img src="${emp.imageUrl}" alt="ุตูุฑุฉ ุงูููุธู" class="img-fluid" style="max-width:200px;border-radius:8px; cursor:pointer;" onclick="openImageModal('${emp.imageUrl}')"></div>` : ''}
                                                                        </div>
                                                                    </div>
                                                        ${transactionsTable}
                                                    `;
            } catch (err) {
                console.error(err);
                searchContent.innerHTML = `<div class="alert alert-danger text-center">ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุจูุงูุงุช ุงูููุธู</div>`;
            }
        }

        // Function to load all employees
        async function loadAllEmployees() {
            try {
                searchContent.innerHTML = `
                                                                        <div class="text-center py-4">
                                                                            <div class="spinner-border text-primary" role="status">
                                                                                <span class="visually-hidden">ุฌุงุฑู ุชุญููู ูู ุงูููุธููู...</span>
                                                                            </div>
                                                                            <p class="mt-2">ุฌุงุฑู ุชุญููู ุฌููุน ุจูุงูุงุช ุงูููุธููู...</p>
                                                                        </div>
                                                                    `;
                searchInput.style.display = 'none'; // Hide search input when showing all
                searchResults.style.display = 'none'; // Hide search results

                const response = await fetch('/api/employees'); // Use the GetAll API
                const employees = await response.json();

                if (employees.length > 0) {
                    searchContent.innerHTML = `
                                        <div class="table-responsive">
                                            <table class="table table-striped" id="employeesTable">
                                                <thead class="table-dark">
                                                    <tr>
                                                        <th>ุฑูู ุงูููุธู</th>
                                                        <th>ุงูุงุณู</th>
                                                        <th>ุงูุนูุฑ</th>
                                                        <th>ุชุงุฑูุฎ ุงูุฅูุดุงุก</th>
                                                        <th>ุงูุนููุงู</th>
                                                        <th>ุงููููุฉ</th>
                                                        <th>ุตูุฑุฉ</th>
                                                        <th>ุงูุฅุฌุฑุงุกุงุช</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    ${employees.map(e => `
                                                        <tr>
                                                            <td>${e.id ?? ''}</td>
                                                            <td>${e.name ?? ''}</td>
                                                            <td>${e.age ?? ''}</td>
                                                            <td>${e.createdAt ?? ''}</td>
                                                            <td>${e.address ?? ''}</td>
                                                            <td>${(e.identityType ?? '') + (e.identityName ? ' - ' + e.identityName : '')}</td>
                                                            <td>${e.imageUrl ? `<img src="${e.imageUrl}" alt="ุตูุฑุฉ ุงูููุธู" class="img-thumbnail" style="max-width:80px;border-radius:6px; cursor:pointer;" onclick="openImageModal('${e.imageUrl}')">` : ''}</td>
                                                            <td><button class="btn btn-sm btn-info" onclick="loadEmployee('${e.id}')">ุนุฑุถ ุงูุชูุงุตูู</button></td>
                                                        </tr>
                                                    `).join('')}
                                                </tbody>
                                            </table>
                                        </div>
                                    `;
                    playSound('successed.mp3'); // Play sound here
                } else {
                    searchContent.innerHTML = `<div class="alert alert-info text-center">ูุง ููุฌุฏ ููุธููู ูู ูุงูุฑุจูุณ ุญุงููุงู.</div>`;
                }
            } catch (err) {
                console.error('ุฎุทุฃ ูู ุชุญููู ูู ุงูููุธููู:', err);
                searchContent.innerHTML = `<div class="alert alert-danger text-center">ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุจูุงูุงุช ุงูููุธููู.</div>`;
            }
        }

        // Initial welcome message
        const initialWelcomeContent = searchContent.innerHTML;

        const showAllToggle = document.getElementById('showAllToggle');
        showAllToggle.addEventListener('change', function () {
            if (this.checked) {
                loadAllEmployees();
                searchInput.value = ''; // Clear search input when showing all
                searchInput.style.display = 'none'; // Hide search input
            } else {
                searchContent.innerHTML = initialWelcomeContent; // Revert to welcome
                searchInput.style.display = 'block'; // Show search input
                searchResults.style.display = 'none'; // Hide search results
            }
        });

        // Function to open the image modal
        function openImageModal(imageUrl) {
            const modalImage = document.getElementById('modalImage');
            modalImage.src = imageUrl;
            const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
            imageModal.show();
            playSound('cameraShutter.mp3'); // Play sound here
        }

        function openEditModal(emp) {
            window.currentEmployee = emp;
            document.getElementById('edit_name').value = emp.name ?? '';
            document.getElementById('edit_age').value = emp.age ?? '';
            document.getElementById('edit_address').value = emp.address ?? '';
            document.getElementById('edit_identityType').value = emp.identityType ?? ''; // Set value for dropdown
            document.getElementById('edit_identityName').value = emp.identityName ?? '';
            document.getElementById('edit_imageUrl').value = emp.imageUrl ?? '';
            new bootstrap.Modal(document.getElementById('editEmployeeModal')).show();
        }

        function openTxModal() {
            // Clear previous values before opening for new transaction
            document.getElementById('tx_type').value = 'ุณุญุจ';
            document.getElementById('tx_amount').value = '';
            document.getElementById('tx_box').value = '';
            document.getElementById('tx_desc').value = '';

            (new bootstrap.Modal(document.getElementById('addTxModal'))).show();
        }

        let currentEditTransaction = null; // To store transaction being edited

        async function openEditTxModal(documentId) {
            if (!window.currentEmployee) return;

            // Fetch the specific transaction details
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}/transactions/${encodeURIComponent(documentId)}`);
            if (!res.ok) {
                console.error('Failed to fetch transaction for editing.', await res.text());
                return;
            }
            currentEditTransaction = await res.json();

            document.getElementById('edit_tx_documentId').value = currentEditTransaction.documentId;
            document.getElementById('edit_tx_type').value = currentEditTransaction.transactionType;
            document.getElementById('edit_tx_amount').value = currentEditTransaction.amount;
            document.getElementById('edit_tx_box').value = currentEditTransaction.boxNumber ?? '';
            document.getElementById('edit_tx_desc').value = currentEditTransaction.description ?? '';

            new bootstrap.Modal(document.getElementById('editTxModal')).show();
        }

        document.getElementById('saveEditBtn').addEventListener('click', async () => {
            if (!window.currentEmployee) return;
            const payload = {
                name: document.getElementById('edit_name').value.trim(),
                age: parseInt(document.getElementById('edit_age').value || '0'),
                address: document.getElementById('edit_address').value.trim(),
                identityType: document.getElementById('edit_identityType').value.trim(),
                identityName: document.getElementById('edit_identityName').value.trim(), // Keep identityName as it exists in the Employee model
                imageUrl: document.getElementById('edit_imageUrl').value.trim()
            };
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}`, {
                method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload)
            });
            if (res.ok) {
                bootstrap.Modal.getInstance(document.getElementById('editEmployeeModal')).hide();
                playSound('edite.mp3'); // Play sound here
                // reload details
                loadEmployee(window.currentEmployee.id);
            }
        });

        document.getElementById('saveTxBtn').addEventListener('click', async () => {
            if (!window.currentEmployee) return;
            const payload = {
                transactionType: document.getElementById('tx_type').value,
                amount: parseFloat(document.getElementById('tx_amount').value || '0'),
                boxNumber: document.getElementById('tx_box').value.trim(),
                description: document.getElementById('tx_desc').value.trim()
            };
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}/transactions`, {
                method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload)
            });
            if (res.ok) {
                bootstrap.Modal.getInstance(document.getElementById('addTxModal')).hide();
                playSound('addCart.mp3'); // Play addCart.mp3 sound here
                // refresh transactions table
                loadEmployee(window.currentEmployee.id);
            }
        });

        document.getElementById('saveEditTxBtn').addEventListener('click', async () => {
            if (!window.currentEmployee || !currentEditTransaction) return;
            const payload = {
                transactionType: document.getElementById('edit_tx_type').value,
                amount: parseFloat(document.getElementById('edit_tx_amount').value || '0'),
                boxNumber: document.getElementById('edit_tx_box').value.trim(),
                description: document.getElementById('edit_tx_desc').value.trim()
            };
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}/transactions/${encodeURIComponent(currentEditTransaction.documentId)}`, {
                method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload)
            });
            if (res.ok) {
                bootstrap.Modal.getInstance(document.getElementById('editTxModal')).hide();
                playSound('edite.mp3'); // Play sound here
                loadEmployee(window.currentEmployee.id);
            }
        });

        // Function to open the transactions summary modal
        function openTxSummary() {
            // We assume the current transactions are rendered in the table; rebuild summary from rows
            const rows = Array.from(document.querySelectorAll('#searchContent table tbody tr'));
            const txs = rows.map(r => {
                const cells = r.querySelectorAll('td');
                return {
                    type: cells[0]?.innerText.trim() || '',
                    amount: parseFloat((cells[1]?.innerText.replace(/[^0-9.-]/g, '') || '0')) || 0,
                    time: cells[2]?.innerText.trim() || '',
                    box: cells[3]?.innerText.trim() || '',
                    desc: cells[4]?.innerText.trim() || ''
                };
            });

            const totalDeposits = txs.filter(t => t.type === 'ุฅูุฏุงุน').reduce((s, t) => s + t.amount, 0);
            const totalWithdrawals = txs.filter(t => t.type === 'ุณุญุจ').reduce((s, t) => s + t.amount, 0);
            const totalTransfers = txs.filter(t => t.type.includes('ุชุญููู')).reduce((s, t) => s + t.amount, 0);
            const grandTotal = txs.reduce((s, t) => s + t.amount, 0);

            const body = document.getElementById('txSummaryBody');
            body.innerHTML = `
                                <div class="row text-center mb-3">
                                    <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>ุงูุฅูุฏุงุนุงุช:</strong> <span class="text-success">${totalDeposits.toLocaleString()} ุฏ.ุฃ</span></div></div>
                                    <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>ุงูุณุญูุจุงุช:</strong> <span class="text-danger">${totalWithdrawals.toLocaleString()} ุฏ.ุฃ</span></div></div>
                                    <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>ุงูุชุญูููุงุช:</strong> <span>${totalTransfers.toLocaleString()} ุฏ.ุฃ</span></div></div>
                                    <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>ุงููุฌููุน ุงูููุงุฆู:</strong> <span class="fw-bold">${grandTotal.toLocaleString()} ุฏ.ุฃ</span></div></div>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-sm table-striped">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>ุงูููุน</th><th>ุงููุจูุบ</th><th>ุงูููุช</th><th>ุงูุตูุฏูู</th><th>ุงููุตู</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            ${txs.map(t => `
                                                <tr>
                                                    <td>${t.type}</td>
                                                    <td>${t.amount.toLocaleString()} ุฏ.ุฃ</td>
                                                    <td>${t.time}</td>
                                                    <td>${t.box}</td>
                                                    <td>${t.desc}</td>
                                                </tr>
                                            `).join('')}
                                        </tbody>
                                    </table>
                                </div>
                            `;
            new bootstrap.Modal(document.getElementById('txSummaryModal')).show();
        }

        function playSound(filename) {
            const audio = new Audio(`/sounds/${filename}`);
            audio.play();
        }
    </script>
}

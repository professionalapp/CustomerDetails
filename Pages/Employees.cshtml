@page
@model CustomerDetails.Pages.EmployeesModel
@{
    ViewData["Title"] = "بحث عن عميل";
}

@section Styles {
    <style>
        .image-upload-container {
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            background-color: #f8f9fa;
            transition: all 0.3s ease;
        }

        .image-upload-container:hover {
            border-color: #007bff;
            background-color: #e3f2fd;
        }

        .image-preview {
            position: relative;
            display: inline-block;
            margin-bottom: 10px;
        }

        .preview-image {
            max-width: 150px;
            max-height: 150px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .remove-image {
            position: absolute;
            top: -10px;
            right: -10px;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
        }

        .upload-buttons {
            display: flex;
            gap: 8px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .upload-buttons .btn {
            min-width: 100px;
            padding: 8px 15px;
            font-size: 14px;
        }

        .upload-status {
            margin-top: 8px;
            padding: 8px;
            border-radius: 5px;
            display: none;
            font-size: 12px;
        }

        .upload-status.success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .upload-status.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .upload-status.uploading {
            background-color: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
    </style>
}

<div class="container mt-4 fade-in">
    <div class="row">
        <div class="col-12">
            <h1 class="text-center mb-4" style="color: #4C7EFF; font-family: 'Segoe UI', sans-serif;">
                بحث عن عميل🔍
            </h1>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-8 mx-auto">
            <div class="d-flex justify-content-end mb-2">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="showAllToggle">
                    <label class="form-check-label" for="showAllToggle">عرض كل العملاء</label>
                </div>
            </div>
            <div class="search-container flex-grow-1 mb-3">
                <input type="text" id="searchInput" class="search-input" placeholder="ابحث بالاسم أو رقم العميل..."
                    autocomplete="off" />
                <i class="fas fa-search search-icon"></i>
                <div id="searchResults" class="search-results"></div>
            </div>
            <div class="text-center mt-2">
                <small class="text-muted">
                    <i class="fas fa-info-circle"></i>
                    اكتب الاسم أو رقم العميل للبحث
                </small>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div id="searchContent">
                <div class="text-center py-5">
                    <div class="search-welcome">
                        <i class="fas fa-search fa-4x text-muted mb-4"></i>
                        <h3 class="text-muted mb-3">بحث</h3>
                        <p class="text-muted mb-4">اكتب الاسم أو رقم العميل في الأعلى</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">صورة العميل</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="" class="img-fluid" id="modalImage" alt="Employee Image">
            </div>
        </div>
    </div>
</div>

<!-- Edit Employee Modal -->
<div class="modal fade" id="editEmployeeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">تعديل بيانات العميل</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editEmployeeForm">
                    <div class="mb-2">
                        <label class="form-label">الاسم</label>
                        <input class="form-control" id="edit_name" type="text" pattern="[أ-ي\s]+"
                            title="يجب أن يحتوي الاسم على أحرف عربية فقط" />
                        <div class="invalid-feedback" id="editNameError">
                            الاسم يجب أن يحتوي على أحرف عربية فقط
                        </div>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">العمر</label>
                        <input type="text" class="form-control" id="edit_age" pattern="[0-9]+"
                            title="يجب أن يحتوي العمر على أرقام فقط" />
                        <div class="invalid-feedback" id="editAgeError">
                            العمر يجب أن يحتوي على أرقام فقط
                        </div>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">العنوان</label>
                        <input class="form-control" id="edit_address" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">نوع الهوية</label>
                        <select class="form-select" id="edit_identityType">
                            <option value="هوية أردنية">هوية أردنية</option>
                            <option value="جواز سفر">جواز سفر</option>
                            <option value="إقامة">إقامة</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">اسم الهوية</label>
                        <input class="form-control" id="edit_identityName" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">الصورة الشخصية</label>
                        <div class="image-upload-container">
                            <!-- معاينة الصورة الحالية -->
                            <div id="editImagePreview" class="image-preview" style="display: none;">
                                <img id="editPreviewImg" src="" alt="معاينة الصورة" class="preview-image">
                                <button type="button" class="btn btn-sm btn-danger remove-image"
                                    onclick="removeEditImage()">
                                    <i class="fas fa-times"></i> حذف
                                </button>
                            </div>

                            <!-- أزرار اختيار الصورة -->
                            <div id="editImageUploadButtons" class="upload-buttons">
                                <button type="button" class="btn btn-primary" onclick="selectEditImageFromGallery()">
                                    <i class="fas fa-images"></i> الاستديو
                                </button>
                            </div>

                            <!-- حقل الملف المخفي -->
                            <input type="file" id="editImageInput" accept="image/*" style="display: none;"
                                onchange="handleEditImageSelect(event)">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                <button type="button" class="btn btn-primary" id="saveEditBtn">حفظ</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Transaction Modal -->
<div class="modal fade" id="addTxModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">إضافة معاملة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addTxForm">
                    <div class="mb-2">
                        <label class="form-label">نوع المعاملة</label>
                        <select class="form-select" id="tx_type">
                            <option value="سحب">سحب</option>
                            <option value="إيداع">إيداع</option>
                            <option value="تحويل راتب">تحويل راتب</option>
                            <option value="مكافأة">مكافأة</option>
                            <option value="خصم">خصم</option>
                            <option value="سلفة">سلفة</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">المبلغ</label>
                        <input type="text" class="form-control" id="tx_amount" pattern="[0-9]+(\.[0-9]+)?"
                            title="يجب أن يحتوي المبلغ على أرقام فقط" required />
                        <div class="invalid-feedback" id="txAmountError">
                            المبلغ يجب أن يحتوي على أرقام فقط
                        </div>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">رقم الصندوق</label>
                        <input class="form-control" id="tx_box" pattern="[0-9]+"
                            title="يجب أن يحتوي رقم الصندوق على أرقام فقط" />
                        <div class="invalid-feedback" id="txBoxError">
                            رقم الصندوق يجب أن يحتوي على أرقام فقط
                        </div>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">الوقت</label>
                        <input class="form-control" value="سيتم تسجيل الوقت الحالي تلقائياً" disabled />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">وصف (اختياري)</label>
                        <input class="form-control" id="tx_desc" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                <button type="button" class="btn btn-success" id="saveTxBtn">حفظ المعاملة</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Transaction Modal -->
<div class="modal fade" id="editTxModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">تعديل معاملة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editTxForm">
                    <input type="hidden" id="edit_tx_documentId">
                    <div class="mb-2">
                        <label class="form-label">نوع المعاملة</label>
                        <select class="form-select" id="edit_tx_type">
                            <option value="سحب">سحب</option>
                            <option value="إيداع">إيداع</option>
                            <option value="تحويل راتب">تحويل راتب</option>
                            <option value="مكافأة">مكافأة</option>
                            <option value="خصم">خصم</option>
                            <option value="سلفة">سلفة</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">المبلغ</label>
                        <input type="text" class="form-control" id="edit_tx_amount" pattern="[0-9]+(\.[0-9]+)?"
                            title="يجب أن يحتوي المبلغ على أرقام فقط" required />
                        <div class="invalid-feedback" id="editTxAmountError">
                            المبلغ يجب أن يحتوي على أرقام فقط
                        </div>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">رقم الصندوق</label>
                        <input class="form-control" id="edit_tx_box" pattern="[0-9]+"
                            title="يجب أن يحتوي رقم الصندوق على أرقام فقط" />
                        <div class="invalid-feedback" id="editTxBoxError">
                            رقم الصندوق يجب أن يحتوي على أرقام فقط
                        </div>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">الوصف (اختياري)</label>
                        <input class="form-control" id="edit_tx_desc" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                <button type="button" class="btn btn-primary" id="saveEditTxBtn">حفظ التعديلات</button>
            </div>
        </div>
    </div>
</div>

<!-- Transactions Summary Modal -->
<div class="modal fade" id="txSummaryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ملخص المعاملات</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="txSummaryBody">
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let searchTimeout;
        const searchInput = document.getElementById('searchInput');
        const searchResults = document.getElementById('searchResults');
        const searchContent = document.getElementById('searchContent');

        searchInput.addEventListener('input', function () {
            const query = this.value.trim();
            if (query.length === 0) { searchResults.style.display = 'none'; return; }
            if (searchTimeout) clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => performSearch(query), 300);
        });

        document.addEventListener('click', function (e) {
            if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                searchResults.style.display = 'none';
            }
        });

        async function performSearch(query) {
            try {
                const response = await fetch(`/api/employees/search?query=${encodeURIComponent(query)}`);
                const results = await response.json();
                if (results.length === 0) {
                    searchResults.innerHTML = '<div class="no-results">لا توجد نتائج</div>';
                } else {
                    searchResults.innerHTML = results.map(e => `
                                                                                                                            <div class="search-result-item" onclick="selectEmployee('${e.id}')">
                                                                                                                                <div class="search-result-name">${e.name}</div>
                                                                                                                                <div class="search-result-details">
                                                                                                                                    رقم العميل: ${e.id} | العمر: ${e.age} سنة | تاريخ الإنشاء: ${e.joinDate}
                                                                                                                                </div>
                                                                                                                            </div>
                                                                                                                        `).join('');
                }
                searchResults.style.display = 'block';
            } catch (err) {
                console.error(err);
                searchResults.innerHTML = '<div class="no-results">حدث خطأ أثناء البحث</div>';
                searchResults.style.display = 'block';
            }
        }

        function selectEmployee(id) {
            searchInput.value = id;
            searchResults.style.display = 'none';
            loadEmployee(id);
        }

        async function loadEmployee(id) {
            try {
                searchContent.innerHTML = `
                                                                                                                                        <div class="text-center py-4">
                                                                                                                                            <div class="spinner-border text-primary" role="status">
                                                                                                                                                <span class="visually-hidden">جاري التحميل...</span>
                                                                                                                                            </div>
                                                                                                                                            <p class="mt-2">جاري تحميل بيانات العميل...</p>
                                                                                                                                        </div>
                                                                                                                                    `;

                const [empRes, trRes] = await Promise.all([
                    fetch(`/api/employees/${encodeURIComponent(id)}`),
                    fetch(`/api/employees/${encodeURIComponent(id)}/transactions`)
                ]);

                if (empRes.status === 404) {
                    searchContent.innerHTML = `<div class="alert alert-warning text-center">لا يوجد عميل بهذا الرقم: <strong>${id}</strong></div>`;
                    return;
                }

                const emp = await empRes.json();
                const transactions = trRes.ok ? await trRes.json() : [];

                // store globally for modals
                window.currentEmployee = emp;

                // Calculate transaction summaries
                const totalAmount = transactions.reduce((sum, t) => sum + (t.amount || 0), 0);

                const transactionsTable = transactions.length > 0 ? `
                                                                                                            <div class="card mt-4">
                                                                                                                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                                                                                                                    <h4 class="mb-0 text-white">سجل المعاملات 💳</h4>
                                                                                                                    <button class="btn btn-sm btn-light" title="ملخص المعاملات" onclick="openTxSummary()">
                                                                                                                        <i class="fas fa-chart-pie"></i>
                                                                                                                    </button>
                                                                                                                </div>
                                                                                                                <div class="card-body">
                                                                                                                    <!-- Transaction Total -->
                                                                                                                    <div class="row mb-3 text-center">
                                                                                                                        <div class="col-12">
                                                                                                                            <div class="p-2 border rounded bg-light">
                                                                                                                                <strong>مجموع المبالغ:</strong> <span class="fw-bold">${totalAmount.toLocaleString()} د.أ</span>
                                                                                                                            </div>
                                                                                                                        </div>
                                                                                                                    </div>

                                                                                                                    <div class="table-responsive">
                                                                                                                        <table class="table table-striped table-hover">
                                                                                                                            <thead class="table-dark">
                                                                                                                                <tr>
                                                                                                                                    <th>نوع المعاملة</th>
                                                                                                                                    <th>المبلغ</th>
                                                                                                                                    <th>التاريخ والوقت</th>
                                                                                                                                    <th>الصندوق</th>
                                                                                                                                    <th>الوصف</th>
                                                                                                                                    <th>الإجراءات</th>
                                                                                                                                </tr>
                                                                                                                            </thead>
                                                                                                                            <tbody>
                                                                                                                                ${transactions.map(t => `
                                                                                                                                    <tr>
                                                                                                                                        <td><span class="badge ${t.transactionType === 'إيداع' ? 'bg-success' : 'bg-danger'}">${t.transactionType ?? ''}</span></td>
                                                                                                                                        <td class="${t.transactionType === 'إيداع' ? 'text-success' : 'text-danger'} fw-bold">${(t.amount ?? 0).toLocaleString()}</td>
                                                                                                                                        <td>${t.transactionTime ?? ''}</td>
                                                                                                                                        <td>${t.boxNumber ?? ''}</td>
                                                                                                                                        <td>${t.description ?? ''}</td>
                                                                                                                                        <td><button class="btn btn-sm btn-info" onclick="openEditTxModal('${t.documentId}')">تعديل</button></td>
                                                                                                                                    </tr>
                                                                                                                                `).join('')}
                                                                                                                            </tbody>
                                                                                                                        </table>
                                                                                                                    </div>
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        ` : `
                                                                                                            <div class="card mt-4">
                                                                                                                <div class="card-header bg-success text-white">
                                                                                                                    <h4 class="mb-0 text-white">سجل المعاملات 💳</h4>
                                                                                                                </div>
                                                                                                                <div class="card-body text-center text-muted">لا توجد معاملات لهذا العميل</div>
                                                                                                            </div>
                                                                                                        `;

                searchContent.innerHTML = `
                                                                                                                                        <div class="card mb-4">
                                                                                                                                            <div class="card-header bg-primary text-white">
                                                                                                                                                <h3 class="mb-0 text-white">معلومات العميل 👤</h3>
                                                                                                                                            </div>
                                                                                                                                            <div class="card-body">
                                                                                                                                                <div class="d-flex justify-content-end mb-3">
                                                                                                                                                    <button class="btn btn-warning me-2" onclick="openEditModal(window.currentEmployee)">تعديل البيانات</button>
                                                                                                                                                    <button class="btn btn-success" onclick="openTxModal()">إضافة معاملة</button>
                                                                                                                                                </div>
                                                                                                                                                <div class="row">
                                                                                                                                                    <div class="col-md-3"><strong>رقم العميل:</strong><br><span class="text-primary">${emp.id}</span></div>
                                                                                                                                                    <div class="col-md-3"><strong>الاسم:</strong><br><span>${emp.name}</span></div>
                                                                                                                                                    <div class="col-md-3"><strong>العمر:</strong><br><span>${emp.age} سنة</span></div>
                                                                                                                                                    <div class="col-md-3"><strong>تاريخ الإنشاء:</strong><br><span>${emp.createdAt ?? ''}</span></div>
                                                                                                                                                </div>
                                                                                                                                                <div class="row mt-3">
                                                                                                                                                    <div class="col-md-6"><strong>العنوان:</strong><br><span>${emp.address ?? ''}</span></div>
                                                                                                                                                    <div class="col-md-3"><strong>نوع الهوية:</strong><br><span>${emp.identityType ?? ''}</span></div>
                                                                                                                                                </div>
                                                                                                                                                ${emp.imageUrl ? `<div class="mt-3"><img src="${emp.imageUrl}" alt="صورة العميل" class="img-fluid" style="max-width:200px;border-radius:8px; cursor:pointer;" onclick="openImageModal('${emp.imageUrl}')"></div>` : ''}
                                                                                                                                            </div>
                                                                                                                                        </div>
                                                                                                                            ${transactionsTable}
                                                                                                                        `;
            } catch (err) {
                console.error(err);
                searchContent.innerHTML = `<div class="alert alert-danger text-center">حدث خطأ أثناء تحميل بيانات العميل</div>`;
            }
        }

        // Function to load all employees
        async function loadAllEmployees() {
            try {
                searchContent.innerHTML = `
                                                                                                                                            <div class="text-center py-4">
                                                                                                                                                <div class="spinner-border text-primary" role="status">
                                                                                                                                                    <span class="visually-hidden">جاري تحميل كل العملاء...</span>
                                                                                                                                                </div>
                                                                                                                                                <p class="mt-2">جاري تحميل جميع بيانات العملاء...</p>
                                                                                                                                            </div>
                                                                                                                                        `;
                searchInput.style.display = 'none'; // Hide search input when showing all
                searchResults.style.display = 'none'; // Hide search results

                const response = await fetch('/api/employees'); // Use the GetAll API
                const employees = await response.json();

                if (employees.length > 0) {
                    searchContent.innerHTML = `
                                                                                                            <div class="table-responsive">
                                                                                                                <table class="table table-striped" id="employeesTable">
                                                                                                                    <thead class="table-dark">
                                                                                                                        <tr>
                                                                                                                            <th>رقم العميل</th>
                                                                                                                            <th>الاسم</th>
                                                                                                                            <th>العمر</th>
                                                                                                                            <th>تاريخ الإنشاء</th>
                                                                                                                            <th>العنوان</th>
                                                                                                                            <th>الهوية</th>
                                                                                                                            <th>صورة</th>
                                                                                                                            <th>الإجراءات</th>
                                                                                                                        </tr>
                                                                                                                    </thead>
                                                                                                                    <tbody>
                                                                                                                        ${employees.map(e => `
                                                                                                                            <tr>
                                                                                                                                <td>${e.id ?? ''}</td>
                                                                                                                                <td>${e.name ?? ''}</td>
                                                                                                                                <td>${e.age ?? ''}</td>
                                                                                                                                <td>${e.createdAt ?? ''}</td>
                                                                                                                                <td>${e.address ?? ''}</td>
                                                                                                                                <td>${(e.identityType ?? '') + (e.identityName ? ' - ' + e.identityName : '')}</td>
                                                                                                                                <td>${e.imageUrl ? `<img src="${e.imageUrl}" alt="صورة العميل" class="img-thumbnail" style="max-width:80px;border-radius:6px; cursor:pointer;" onclick="openImageModal('${e.imageUrl}')">` : ''}</td>
                                                                                                                                <td><button class="btn btn-sm btn-info" onclick="loadEmployee('${e.id}')">عرض التفاصيل</button></td>
                                                                                                                            </tr>
                                                                                                                        `).join('')}
                                                                                                                    </tbody>
                                                                                                                </table>
                                                                                                            </div>
                                                                                                        `;
                } else {
                    searchContent.innerHTML = `<div class="alert alert-info text-center">لا يوجد عملاء.</div>`;
                }
            } catch (err) {
                console.error('خطأ في تحميل كل العملاء:', err);
                searchContent.innerHTML = `<div class="alert alert-danger text-center">حدث خطأ أثناء تحميل بيانات العملاء.</div>`;
            }
        }

        // Initial welcome message
        const initialWelcomeContent = searchContent.innerHTML;

        const showAllToggle = document.getElementById('showAllToggle');
        showAllToggle.addEventListener('change', function () {
            if (this.checked) {
                loadAllEmployees();
                searchInput.value = ''; // Clear search input when showing all
                searchInput.style.display = 'none'; // Hide search input
            } else {
                searchContent.innerHTML = initialWelcomeContent; // Revert to welcome
                searchInput.style.display = 'block'; // Show search input
                searchResults.style.display = 'none'; // Hide search results
            }
        });

        // Function to open the image modal
        function openImageModal(imageUrl) {
            const modalImage = document.getElementById('modalImage');
            modalImage.src = imageUrl;
            const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
            imageModal.show();
            playSound('cameraShutter.mp3'); // Play sound here
        }

        // متغيرات لرفع الصور في نموذج التعديل
        let editSelectedImageFile = null;
        let editUploadedImageUrl = null;

        // التحقق من صحة الاسم في التعديل
        function validateEditName() {
            const nameInput = document.getElementById('edit_name');
            const name = nameInput.value.trim();
            const isValid = /^[أ-ي\s]+$/.test(name);

            if (name && !isValid) {
                nameInput.classList.add('is-invalid');
                return false;
            } else {
                nameInput.classList.remove('is-invalid');
                return true;
            }
        }

        // التحقق من صحة العمر في التعديل
        function validateEditAge() {
            const ageInput = document.getElementById('edit_age');
            const age = ageInput.value.trim();
            const isValid = /^[0-9]+$/.test(age);

            if (age && !isValid) {
                ageInput.classList.add('is-invalid');
                return false;
            } else {
                ageInput.classList.remove('is-invalid');
                return true;
            }
        }

        // التحقق من صحة المبلغ في إضافة المعاملة
        function validateTxAmount() {
            const amountInput = document.getElementById('tx_amount');
            const amount = amountInput.value.trim();
            const isValid = /^[0-9]+(\.[0-9]+)?$/.test(amount);

            if (amount && !isValid) {
                amountInput.classList.add('is-invalid');
                return false;
            } else {
                amountInput.classList.remove('is-invalid');
                return true;
            }
        }

        // التحقق من صحة رقم الصندوق في إضافة المعاملة
        function validateTxBox() {
            const boxInput = document.getElementById('tx_box');
            const box = boxInput.value.trim();
            const isValid = /^[0-9]+$/.test(box);

            if (box && !isValid) {
                boxInput.classList.add('is-invalid');
                return false;
            } else {
                boxInput.classList.remove('is-invalid');
                return true;
            }
        }

        // التحقق من صحة المبلغ في تعديل المعاملة
        function validateEditTxAmount() {
            const amountInput = document.getElementById('edit_tx_amount');
            const amount = amountInput.value.trim();
            const isValid = /^[0-9]+(\.[0-9]+)?$/.test(amount);

            if (amount && !isValid) {
                amountInput.classList.add('is-invalid');
                return false;
            } else {
                amountInput.classList.remove('is-invalid');
                return true;
            }
        }

        // التحقق من صحة رقم الصندوق في تعديل المعاملة
        function validateEditTxBox() {
            const boxInput = document.getElementById('edit_tx_box');
            const box = boxInput.value.trim();
            const isValid = /^[0-9]+$/.test(box);

            if (box && !isValid) {
                boxInput.classList.add('is-invalid');
                return false;
            } else {
                boxInput.classList.remove('is-invalid');
                return true;
            }
        }

        // اختيار الصورة من الاستديو في التعديل
        function selectEditImageFromGallery() {
            const input = document.getElementById('editImageInput');
            input.removeAttribute('capture');
            input.click();
        }

        // التعامل مع اختيار الصورة في التعديل
        function handleEditImageSelect(event) {
            const file = event.target.files[0];
            if (file) {
                editSelectedImageFile = file;
                showEditImagePreview(file);
                uploadEditImageToCloudinary(file);
            }
        }

        // عرض معاينة الصورة في التعديل
        function showEditImagePreview(file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('editPreviewImg').src = e.target.result;
                document.getElementById('editImagePreview').style.display = 'block';
                document.getElementById('editImageUploadButtons').style.display = 'none';
            };
            reader.readAsDataURL(file);
        }

        // حذف الصورة في التعديل
        function removeEditImage() {
            editSelectedImageFile = null;
            editUploadedImageUrl = null;
            document.getElementById('editImagePreview').style.display = 'none';
            document.getElementById('editImageUploadButtons').style.display = 'flex';
            document.getElementById('editImageInput').value = '';
            hideEditUploadStatus();
        }

        // رفع الصورة إلى Cloudinary في التعديل
        async function uploadEditImageToCloudinary(file) {
            showEditUploadStatus('جاري رفع الصورة...', 'uploading');

            try {
                const formData = new FormData();
                formData.append('file', file);
                formData.append('upload_preset', 'imgupload');
                formData.append('folder', 'employees');

                const response = await fetch('https://api.cloudinary.com/v1_1/dnx3ypscu/image/upload', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const data = await response.json();
                    editUploadedImageUrl = data.secure_url;
                    showEditUploadStatus('تم رفع الصورة بنجاح!', 'success');
                } else {
                    throw new Error('فشل في رفع الصورة');
                }
            } catch (error) {
                console.error('خطأ في رفع الصورة:', error);
                showEditUploadStatus('خطأ في رفع الصورة: ' + error.message, 'error');
            }
        }

        // عرض حالة الرفع في التعديل
        function showEditUploadStatus(message, type) {
            let statusDiv = document.getElementById('editUploadStatus');
            if (!statusDiv) {
                statusDiv = document.createElement('div');
                statusDiv.id = 'editUploadStatus';
                statusDiv.className = 'upload-status';
                document.querySelector('#editEmployeeModal .image-upload-container').appendChild(statusDiv);
            }

            statusDiv.textContent = message;
            statusDiv.className = `upload-status ${type}`;
            statusDiv.style.display = 'block';
        }

        // إخفاء حالة الرفع في التعديل
        function hideEditUploadStatus() {
            const statusDiv = document.getElementById('editUploadStatus');
            if (statusDiv) {
                statusDiv.style.display = 'none';
            }
        }

        function openEditModal(emp) {
            window.currentEmployee = emp;
            document.getElementById('edit_name').value = emp.name ?? '';
            document.getElementById('edit_age').value = emp.age ?? '';
            document.getElementById('edit_address').value = emp.address ?? '';
            document.getElementById('edit_identityType').value = emp.identityType ?? ''; // Set value for dropdown
            document.getElementById('edit_identityName').value = emp.identityName ?? '';

            // إعادة تعيين متغيرات الصورة
            editSelectedImageFile = null;
            editUploadedImageUrl = null;

            // عرض الصورة الحالية إذا كانت موجودة
            if (emp.imageUrl) {
                document.getElementById('editPreviewImg').src = emp.imageUrl;
                document.getElementById('editImagePreview').style.display = 'block';
                document.getElementById('editImageUploadButtons').style.display = 'none';
            } else {
                document.getElementById('editImagePreview').style.display = 'none';
                document.getElementById('editImageUploadButtons').style.display = 'flex';
            }

            // إضافة event listeners للتحقق من صحة البيانات
            const editNameInput = document.getElementById('edit_name');
            const editAgeInput = document.getElementById('edit_age');

            // إزالة event listeners السابقة لتجنب التكرار
            editNameInput.removeEventListener('input', validateEditName);
            editNameInput.removeEventListener('blur', validateEditName);
            editAgeInput.removeEventListener('input', validateEditAge);
            editAgeInput.removeEventListener('blur', validateEditAge);

            // إضافة event listeners جديدة
            editNameInput.addEventListener('input', validateEditName);
            editNameInput.addEventListener('blur', validateEditName);
            editAgeInput.addEventListener('input', validateEditAge);
            editAgeInput.addEventListener('blur', validateEditAge);

            hideEditUploadStatus();
            new bootstrap.Modal(document.getElementById('editEmployeeModal')).show();
        }

        function openTxModal() {
            // Clear previous values before opening for new transaction
            document.getElementById('tx_type').value = 'سحب';
            document.getElementById('tx_amount').value = '';
            document.getElementById('tx_box').value = '';
            document.getElementById('tx_desc').value = '';

            // إضافة event listeners للتحقق من صحة البيانات
            const txAmountInput = document.getElementById('tx_amount');
            const txBoxInput = document.getElementById('tx_box');

            // إزالة event listeners السابقة لتجنب التكرار
            txAmountInput.removeEventListener('input', validateTxAmount);
            txAmountInput.removeEventListener('blur', validateTxAmount);
            txBoxInput.removeEventListener('input', validateTxBox);
            txBoxInput.removeEventListener('blur', validateTxBox);

            // إضافة event listeners جديدة
            txAmountInput.addEventListener('input', validateTxAmount);
            txAmountInput.addEventListener('blur', validateTxAmount);
            txBoxInput.addEventListener('input', validateTxBox);
            txBoxInput.addEventListener('blur', validateTxBox);

            (new bootstrap.Modal(document.getElementById('addTxModal'))).show();
        }

        let currentEditTransaction = null; // To store transaction being edited

        async function openEditTxModal(documentId) {
            if (!window.currentEmployee) return;

            // Fetch the specific transaction details
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}/transactions/${encodeURIComponent(documentId)}`);
            if (!res.ok) {
                console.error('Failed to fetch transaction for editing.', await res.text());
                return;
            }
            currentEditTransaction = await res.json();

            document.getElementById('edit_tx_documentId').value = currentEditTransaction.documentId;
            document.getElementById('edit_tx_type').value = currentEditTransaction.transactionType;
            document.getElementById('edit_tx_amount').value = currentEditTransaction.amount;
            document.getElementById('edit_tx_box').value = currentEditTransaction.boxNumber ?? '';
            document.getElementById('edit_tx_desc').value = currentEditTransaction.description ?? '';

            // إضافة event listeners للتحقق من صحة البيانات
            const editTxAmountInput = document.getElementById('edit_tx_amount');
            const editTxBoxInput = document.getElementById('edit_tx_box');

            // إزالة event listeners السابقة لتجنب التكرار
            editTxAmountInput.removeEventListener('input', validateEditTxAmount);
            editTxAmountInput.removeEventListener('blur', validateEditTxAmount);
            editTxBoxInput.removeEventListener('input', validateEditTxBox);
            editTxBoxInput.removeEventListener('blur', validateEditTxBox);

            // إضافة event listeners جديدة
            editTxAmountInput.addEventListener('input', validateEditTxAmount);
            editTxAmountInput.addEventListener('blur', validateEditTxAmount);
            editTxBoxInput.addEventListener('input', validateEditTxBox);
            editTxBoxInput.addEventListener('blur', validateEditTxBox);

            new bootstrap.Modal(document.getElementById('editTxModal')).show();
        }

        document.getElementById('saveEditBtn').addEventListener('click', async () => {
            if (!window.currentEmployee) return;

            // التحقق من صحة البيانات قبل الإرسال
            if (!validateEditName()) {
                alert('الاسم يجب أن يحتوي على أحرف عربية فقط');
                return;
            }

            if (!validateEditAge()) {
                alert('العمر يجب أن يحتوي على أرقام فقط');
                return;
            }

            const payload = {
                name: document.getElementById('edit_name').value.trim(),
                age: parseInt(document.getElementById('edit_age').value || '0'),
                address: document.getElementById('edit_address').value.trim(),
                identityType: document.getElementById('edit_identityType').value.trim(),
                identityName: document.getElementById('edit_identityName').value.trim(), // Keep identityName as it exists in the Employee model
                imageUrl: editUploadedImageUrl || window.currentEmployee.imageUrl || '' // استخدام رابط الصورة المرفوعة أو الحالية
            };
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}`, {
                method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload)
            });
            if (res.ok) {
                bootstrap.Modal.getInstance(document.getElementById('editEmployeeModal')).hide();
                playSound('edite.mp3'); // Play sound here
                // reload details
                loadEmployee(window.currentEmployee.id);
            }
        });

        document.getElementById('saveTxBtn').addEventListener('click', async () => {
            if (!window.currentEmployee) return;

            // التحقق من صحة البيانات قبل الإرسال
            if (!validateTxAmount()) {
                alert('المبلغ يجب أن يحتوي على أرقام فقط');
                return;
            }

            if (!validateTxBox()) {
                alert('رقم الصندوق يجب أن يحتوي على أرقام فقط');
                return;
            }

            const payload = {
                transactionType: document.getElementById('tx_type').value,
                amount: parseFloat(document.getElementById('tx_amount').value || '0'),
                boxNumber: document.getElementById('tx_box').value.trim(),
                description: document.getElementById('tx_desc').value.trim()
            };
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}/transactions`, {
                method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload)
            });
            if (res.ok) {
                bootstrap.Modal.getInstance(document.getElementById('addTxModal')).hide();
                playSound('addCart.mp3'); // Play addCart.mp3 sound here
                // refresh transactions table
                loadEmployee(window.currentEmployee.id);
            }
        });

        document.getElementById('saveEditTxBtn').addEventListener('click', async () => {
            if (!window.currentEmployee || !currentEditTransaction) return;

            // التحقق من صحة البيانات قبل الإرسال
            if (!validateEditTxAmount()) {
                alert('المبلغ يجب أن يحتوي على أرقام فقط');
                return;
            }

            if (!validateEditTxBox()) {
                alert('رقم الصندوق يجب أن يحتوي على أرقام فقط');
                return;
            }

            const payload = {
                transactionType: document.getElementById('edit_tx_type').value,
                amount: parseFloat(document.getElementById('edit_tx_amount').value || '0'),
                boxNumber: document.getElementById('edit_tx_box').value.trim(),
                description: document.getElementById('edit_tx_desc').value.trim()
            };
            const res = await fetch(`/api/employees/${encodeURIComponent(window.currentEmployee.id)}/transactions/${encodeURIComponent(currentEditTransaction.documentId)}`, {
                method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload)
            });
            if (res.ok) {
                bootstrap.Modal.getInstance(document.getElementById('editTxModal')).hide();
                playSound('edite.mp3'); // Play sound here
                loadEmployee(window.currentEmployee.id);
            }
        });

        // Function to open the transactions summary modal
        function openTxSummary() {
            // We assume the current transactions are rendered in the table; rebuild summary from rows
            const rows = Array.from(document.querySelectorAll('#searchContent table tbody tr'));
            const txs = rows.map(r => {
                const cells = r.querySelectorAll('td');
                return {
                    type: cells[0]?.innerText.trim() || '',
                    amount: parseFloat((cells[1]?.innerText.replace(/[^0-9.-]/g, '') || '0')) || 0,
                    time: cells[2]?.innerText.trim() || '',
                    box: cells[3]?.innerText.trim() || '',
                    desc: cells[4]?.innerText.trim() || ''
                };
            });

            const totalDeposits = txs.filter(t => t.type === 'إيداع').reduce((s, t) => s + t.amount, 0);
            const totalWithdrawals = txs.filter(t => t.type === 'سحب').reduce((s, t) => s + t.amount, 0);
            const totalTransfers = txs.filter(t => t.type.includes('تحويل')).reduce((s, t) => s + t.amount, 0);
            const grandTotal = txs.reduce((s, t) => s + t.amount, 0);

            const body = document.getElementById('txSummaryBody');
            body.innerHTML = `
                                                                                                    <div class="row text-center mb-3">
                                                                                                        <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>الإيداعات:</strong> <span class="text-success">${totalDeposits.toLocaleString()} د.أ</span></div></div>
                                                                                                        <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>السحوبات:</strong> <span class="text-danger">${totalWithdrawals.toLocaleString()} د.أ</span></div></div>
                                                                                                        <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>التحويلات:</strong> <span>${totalTransfers.toLocaleString()} د.أ</span></div></div>
                                                                                                        <div class="col-md-3"><div class="p-2 border rounded bg-light"><strong>المجموع النهائي:</strong> <span class="fw-bold">${grandTotal.toLocaleString()} د.أ</span></div></div>
                                                                                                    </div>
                                                                                                    <div class="table-responsive">
                                                                                                        <table class="table table-sm table-striped">
                                                                                                            <thead class="table-dark">
                                                                                                                <tr>
                                                                                                                    <th>النوع</th><th>المبلغ</th><th>الوقت</th><th>الصندوق</th><th>الوصف</th>
                                                                                                                </tr>
                                                                                                            </thead>
                                                                                                            <tbody>
                                                                                                                ${txs.map(t => `
                                                                                                                    <tr>
                                                                                                                        <td>${t.type}</td>
                                                                                                                        <td>${t.amount.toLocaleString()} د.أ</td>
                                                                                                                        <td>${t.time}</td>
                                                                                                                        <td>${t.box}</td>
                                                                                                                        <td>${t.desc}</td>
                                                                                                                    </tr>
                                                                                                                `).join('')}
                                                                                                            </tbody>
                                                                                                        </table>
                                                                                                    </div>
                                                                                                `;
            new bootstrap.Modal(document.getElementById('txSummaryModal')).show();
        }

        function playSound(filename) {
            const audio = new Audio(`/sounds/${filename}`);
            audio.play();
        }
    </script>
}
